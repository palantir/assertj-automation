buildscript {
    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
        gradlePluginPortal() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    dependencies {
        classpath 'com.palantir.jakartapackagealignment:jakarta-package-alignment:0.6.0'
        classpath 'com.palantir.gradle.jdks:gradle-jdks:0.34.0'
        classpath 'com.palantir.gradle.jdkslatest:gradle-jdks-latest:0.12.0'
        classpath 'com.palantir.gradle.externalpublish:gradle-external-publish-plugin:1.13.0'
        classpath 'com.gradle.publish:plugin-publish-plugin:1.2.1'
        classpath 'com.palantir.baseline:gradle-baseline-java:5.38.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:2.20.0'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:2.40.0'
    }
}

plugins {
 id 'com.palantir.git-version' version '3.0.0'
id 'org.inferred.processors' version '3.7.0'
}

apply plugin: 'com.palantir.external-publish'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.java-format'
apply plugin: 'com.palantir.baseline-java-versions'
apply plugin: 'com.palantir.jdks.latest'

version System.env.CIRCLE_TAG ?: gitVersion()

allprojects {
    apply plugin: 'com.palantir.java-format'
    apply plugin: 'com.palantir.jakarta-package-alignment'
    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    group 'com.palantir.assertj-automation'
    version rootProject.version
}

subprojects {
    apply plugin: 'org.inferred.processors'
}

javaVersions {
    libraryTarget = 11
}
